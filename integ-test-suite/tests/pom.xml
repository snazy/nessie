<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2020 Dremio

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.projectnessie.nessie-integ-test-suite</groupId>
  <artifactId>nessie-integ-test-suite</artifactId>
  <version>0.30.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Nessie Integrations Test Suite</name>
  <description>Integrations Test Suite for Nessie</description>
  <url>https://projectnessie.org</url>
  <organization>
    <name>Project Nessie</name>
    <url>https://projectnessie.org</url>
  </organization>
  <licenses>
    <license>
      <name>The Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>jacques-n</id>
      <name>Jacques Nadeau</name>
      <url>https://github.com/jacques-n</url>
    </developer>
    <developer>
      <id>rymurr</id>
      <name>Ryan Murray</name>
      <url>https://github.com/rymurr</url>
    </developer>
    <developer>
      <id>laurentgo</id>
      <name>Laurent Goujon</name>
      <url>https://github.com/laurentgo</url>
    </developer>
    <developer>
      <id>snazy</id>
      <name>Robert Stupp</name>
      <url>https://github.com/snazy</url>
    </developer>
    <developer>
      <id>nastra</id>
      <name>Eduard Tudenhoefner</name>
      <url>https://github.com/nastra</url>
    </developer>
    <developer>
      <id>dimas-b</id>
      <name>Dmitri Bourlatchkov</name>
      <url>https://github.com/dimas-b</url>
    </developer>
    <developer>
      <id>omarsmak</id>
      <name>Omar Al-Safi</name>
      <url>https://github.com/omarsmak</url>
    </developer>
    <developer>
      <id>tomekl007</id>
      <name>Tomasz Lelek</name>
      <url>https://github.com/tomekl007</url>
    </developer>
    <developer>
      <id>XN137</id>
      <name>Christopher Lambert</name>
      <url>https://github.com/XN137</url>
    </developer>
    <developer>
      <id>harshm-dev</id>
      <name>Harsh Maheshwari</name>
      <url>https://github.com/harshm-dev</url>
    </developer>
    <developer>
      <id>ajantha-bhat</id>
      <name>Ajantha Bhat</name>
      <url>https://github.com/ajantha-bhat</url>
    </developer>
  </developers>

  <mailingLists>
    <mailingList>
      <name>Project Nessie List</name>
      <subscribe>projectnessie-subscribe@googlegroups.com</subscribe>
      <unsubscribe>projectnessie-unsubscribe@googlegroups.com</unsubscribe>
      <post>projectnessie@googlegroups.com</post>
      <archive>https://groups.google.com/g/projectnessie</archive>
    </mailingList>
  </mailingLists>

  <modules>
    <module>deltalake</module>
    <module>iceberg</module>
  </modules>

  <scm>
    <connection>scm:git:https://github.com/projectnessie/nessie</connection>
    <developerConnection>scm:git:https://github.com/projectnessie/nessie</developerConnection>
    <url>https://github.com/projectnessie/nessie</url>
    <tag>main</tag>
  </scm>
  <issueManagement>
    <system>Github</system>
    <url>https://github.com/projectnessie/nessie/issues</url>
  </issueManagement>

  <properties>
    <!-- Build properties -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.release>8</maven.compiler.release>
    <argLine />
    <test.log.level>INFO</test.log.level>

    <!-- Externally provided / overridden via invoker script 'scripts/test-integrations.sh' -->
    <nessie.version>${project.version}</nessie.version>
    <iceberg.version>0.14.0-SNAPSHOT</iceberg.version>
    <trino.version>376-SNAPSHOT</trino.version>
    <deltalake.version>1.1.0-nessie</deltalake.version>

    <!-- Nessie Quarkus configs -->
    <nessie.version.store.type>INMEMORY</nessie.version.store.type>
    <nessie.version.store.rocks.db-path>${project.build.directory}/rocks</nessie.version.store.rocks.db-path>
    <quarkus.mongodb.connection-string/>
    <quarkus.dynamodb.aws.region>us-west-2</quarkus.dynamodb.aws.region>

    <!-- Spark configuration -->
    <spark.master.url>local[2]</spark.master.url>

    <!-- Version properties -->
    <assertj.version>3.22.0</assertj.version>
    <checkstyle.version>10.1</checkstyle.version>
    <google-error-prone.version>2.11.0</google-error-prone.version>
    <google-java-format.version>1.15.0</google-java-format.version>
    <guava.version>31.1-jre</guava.version>
    <junit.version>5.8.2</junit.version>
    <logback.version>1.2.11</logback.version>
    <nessie-apprunner.version>0.21.4</nessie-apprunner.version>
    <scala2.12.version>2.12.13</scala2.12.version>
    <slf4j.version>1.7.36</slf4j.version>
    <spark31.version>3.1.2</spark31.version>
    <spark32.version>3.2.1</spark32.version>
    <surefire.version>3.0.0-M5</surefire.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.projectnessie</groupId>
        <artifactId>nessie-bom</artifactId>
        <version>${nessie.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.projectnessie</groupId>
        <artifactId>nessie-spark-extensions</artifactId>
        <version>${nessie.version}</version>
      </dependency>
      <dependency>
        <groupId>org.projectnessie</groupId>
        <artifactId>nessie-spark-3.2-extensions</artifactId>
        <version>${nessie.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.iceberg</groupId>
        <artifactId>iceberg-spark-runtime-3.1_2.12</artifactId>
        <version>${iceberg.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.iceberg</groupId>
        <artifactId>iceberg-spark-runtime-3.2_2.12</artifactId>
        <version>${iceberg.version}</version>
      </dependency>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.googlejavaformat</groupId>
        <artifactId>google-java-format</artifactId>
        <version>${google-java-format.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_core</artifactId>
        <version>${google-error-prone.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>log4j-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <!-- Spark 3.2 / Scala 2.12 -->
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-core_2.12</artifactId>
        <version>${spark32.version}</version>
        <scope>provided</scope>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-util</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-sql_2.12</artifactId>
        <version>${spark32.version}</version>
        <scope>provided</scope>
        <exclusions>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-hive_2.12</artifactId>
        <version>${spark32.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.arrow</groupId>
            <artifactId>arrow-vector</artifactId>
          </exclusion>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <!-- org.apache.maven plugins first -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-wrapper-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.10.1</version>
          <configuration>
            <!-- without this, you get NPE rather than useful messages with Maven + JDK11 -->
            <forceJavacCompilerUse>true</forceJavacCompilerUse>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.2.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${surefire.version}</version>
          <configuration>
            <argLine>@{argLine} -Dfile.encoding=UTF-8</argLine>
            <trimStackTrace>false</trimStackTrace>
            <systemProperties>
              <user.language>en</user.language>
              <user.country>US</user.country>
              <user.variant/>
            </systemProperties>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${surefire.version}</version>
          <configuration>
            <argLine>@{argLine} -Dfile.encoding=UTF-8</argLine>
            <trimStackTrace>false</trimStackTrace>
            <systemProperties>
              <user.language>en</user.language>
              <user.country>US</user.country>
              <user.variant/>
            </systemProperties>
            <useModulePath>false</useModulePath>
            <systemPropertyVariables>
              <test.log.level>${test.log.level}</test.log.level>
              <quarkus.http.test-port>${quarkus.http.test-port}</quarkus.http.test-port>
              <quarkus.http.url>http://localhost:${quarkus.http.test-port}/api/v1</quarkus.http.url>
              <spark.master.url>${spark.master.url}</spark.master.url>
              <nessie.version>${nessie.version}</nessie.version>
              <iceberg.version>${iceberg.version}</iceberg.version>
              <trino.version>${trino.version}</trino.version>
              <deltalake.version>${deltalake.version}</deltalake.version>
            </systemPropertyVariables>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>3.1.2</version>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${checkstyle.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>2.22.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>

        <!-- Nessie plugins -->
        <plugin>
          <groupId>org.projectnessie</groupId>
          <artifactId>nessie-apprunner-maven-plugin</artifactId>
          <version>${nessie-apprunner.version}</version>
          <configuration>
            <skip>${skipITs}</skip>
            <appArtifactId>org.projectnessie:nessie-quarkus:jar:runner:${nessie.version}</appArtifactId>
            <systemProperties>
              <quarkus.devservices.enabled>false</quarkus.devservices.enabled>
              <nessie.version.store.type>${nessie.version.store.type}</nessie.version.store.type>
              <nessie.version.store.rocks.db-path>${nessie.version.store.rocks.db-path}</nessie.version.store.rocks.db-path>
              <quarkus.mongodb.connection-string>${quarkus.mongodb.connection-string}</quarkus.mongodb.connection-string>
              <quarkus.dynamodb.aws.region>${quarkus.dynamodb.aws.region}</quarkus.dynamodb.aws.region>
            </systemProperties>
            <environment>
              <HTTP_ACCESS_LOG_LEVEL>${test.log.level}</HTTP_ACCESS_LOG_LEVEL>
            </environment>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.projectnessie</groupId>
              <artifactId>nessie-quarkus</artifactId>
              <version>${nessie.version}</version>
              <classifier>runner</classifier>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>start</id>
              <phase>pre-integration-test</phase>
              <goals><goal>start</goal></goals>
            </execution>
            <execution>
              <id>stop</id>
              <phase>post-integration-test</phase>
              <goals><goal>stop</goal></goals>
            </execution>
          </executions>
        </plugin>

        <!-- 3rd party plugins -->
        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>4.1</version>
        </plugin>
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>4.6.1</version>
          <configuration>
            <sendJavaToScalac>false</sendJavaToScalac>
            <scalaVersion>${scala2.12.version}</scalaVersion>
          </configuration>
          <executions>
            <execution>
              <id>scala-compile-first</id>
              <phase>compile</phase>
              <goals>
                <goal>add-source</goal>
                <goal>compile</goal>
              </goals>
            </execution>
            <execution>
              <id>scala-test-compile</id>
              <phase>test-compile</phase>
              <goals>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>tidy-maven-plugin</artifactId>
          <version>1.1.0</version>
        </plugin>
        <plugin>
          <groupId>com.bazaarvoice.maven.plugins</groupId>
          <artifactId>process-exec-maven-plugin</artifactId>
          <version>0.9</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <groupId>org.owasp</groupId>
          <artifactId>dependency-check-maven</artifactId>
          <version>7.0.4</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tidy-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>validate-pom</id>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <id>default-testJar</id>
            <goals>
              <goal>test-jar</goal>
            </goals>
            <configuration>
              <skipIfEmpty>true</skipIfEmpty>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <!-- Specify source and test directories to not included generated source directories -->
          <sourceDirectories>
            <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
          </sourceDirectories>
          <testSourceDirectories>
            <testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>
          </testSourceDirectories>
          <encoding>UTF-8</encoding>
          <failsOnError>true</failsOnError>
          <failOnViolation>true</failOnViolation>
          <violationSeverity>warning</violationSeverity>
          <consoleOutput>true</consoleOutput>
          <includeResources>true</includeResources>
          <includeTestResources>true</includeTestResources>
          <resourceIncludes>**/*.properties,**/*.conf,**/*.json,**/*.xml</resourceIncludes>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
          <configLocation>codestyle/checkstyle-config.xml</configLocation>
          <skip>${skipCheckstyle}</skip>
        </configuration>
        <executions>
          <execution>
            <id>checkstyle-verification</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <configuration>
          <skip>${skipLicense}</skip>
          <inlineHeader>
Copyright (C) ${project.inceptionYear} ${owner}

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
          </inlineHeader>
          <properties>
            <owner>Dremio</owner>
            <project.inceptionYear>2020</project.inceptionYear>
          </properties>
          <project>
            <inceptionYear>2020</inceptionYear>
          </project>
          <failIfUnknown>true</failIfUnknown>
          <useDefaultExcludes>false</useDefaultExcludes>

          <includes>
            <include>src/**</include>
            <include>*</include>
          </includes>
          <excludes>
            <exclude>**/.mvn/**</exclude>
            <exclude>mvnw</exclude>
            <exclude>mvnw.cmd</exclude>
            <exclude>**/*.java</exclude>
            <exclude>**/*.scala</exclude>
            <!-- default excludes (minus some items) from https://github.com/mycila/license-maven-plugin/blob/61f65ac65bfc38246a15fb84083796c5e3afb053/license-maven-plugin/src/main/java/com/mycila/maven/plugin/license/Default.java -->
            <exclude>**/*~</exclude>
            <exclude>**/000000_0</exclude>
            <exclude>**/#*#</exclude>
            <exclude>**/.#*</exclude>
            <exclude>**/%*%</exclude>
            <exclude>**/._*</exclude>
            <exclude>**/.repository/**</exclude>
            <exclude>**/CVS</exclude>
            <exclude>**/CVS/**</exclude>
            <exclude>**/.cvsignore</exclude>
            <exclude>**/RCS</exclude>
            <exclude>**/RCS/**</exclude>
            <exclude>**/SCCS</exclude>
            <exclude>**/SCCS/**</exclude>
            <exclude>**/vssver.scc</exclude>
            <exclude>**/.svn</exclude>
            <exclude>**/.svn/**</exclude>
            <exclude>**/.arch-ids</exclude>
            <exclude>**/.arch-ids/**</exclude>
            <exclude>**/.bzr</exclude>
            <exclude>**/.bzr/**</exclude>
            <exclude>**/.MySCMServerInfo</exclude>
            <exclude>**/.DS_Store</exclude>
            <exclude>**/.metadata</exclude>
            <exclude>**/.metadata/**</exclude>
            <exclude>**/.hg</exclude>
            <exclude>**/.hg/**</exclude>
            <exclude>**/.hgignore</exclude>
            <exclude>**/.git</exclude>
            <exclude>**/.git/**</exclude>
            <exclude>**/.gitignore</exclude>
            <exclude>**/.gitmodules</exclude>
            <exclude>**/BitKeeper</exclude>
            <exclude>**/BitKeeper/**</exclude>
            <exclude>**/ChangeSet</exclude>
            <exclude>**/ChangeSet/**</exclude>
            <exclude>**/_darcs</exclude>
            <exclude>**/_darcs/**</exclude>
            <exclude>**/.darcsrepo</exclude>
            <exclude>**/.darcsrepo/**</exclude>
            <exclude>**/-darcs-backup*</exclude>
            <exclude>**/.darcs-temp-mail</exclude>
            <!-- <exclude>**/target/**</exclude> want this for add-license-for-java-generated-from-proto -->
            <exclude>**/test-output/**</exclude>
            <exclude>**/release.properties</exclude>
            <exclude>**/dependency-reduced-pom.xml</exclude>
            <exclude>**/release-pom.xml</exclude>
            <exclude>**/pom.xml.releaseBackup</exclude>
            <exclude>**/cobertura.ser</exclude>
            <exclude>**/.clover/**</exclude>
            <exclude>**/.classpath</exclude>
            <exclude>**/.factorypath</exclude>
            <exclude>**/.project</exclude>
            <exclude>**/.settings/**</exclude>
            <exclude>**/*.iml</exclude>
            <exclude>**/*.ipr</exclude>
            <exclude>**/*.iws</exclude>
            <exclude>.idea/**</exclude>
            <exclude>**/nb-configuration.xml</exclude>
            <exclude>**/MANIFEST.MF</exclude>
            <exclude>**/*.jpg</exclude>
            <exclude>**/*.png</exclude>
            <exclude>**/*.gif</exclude>
            <exclude>**/*.ico</exclude>
            <exclude>**/*.bmp</exclude>
            <exclude>**/*.tiff</exclude>
            <exclude>**/*.tif</exclude>
            <exclude>**/*.cr2</exclude>
            <exclude>**/*.xcf</exclude>
            <exclude>**/*.class</exclude>
            <exclude>**/*.exe</exclude>
            <exclude>**/*.dll</exclude>
            <exclude>**/*.so</exclude>
            <exclude>**/*.md5</exclude>
            <exclude>**/*.sha1</exclude>
            <exclude>**/*.jar</exclude>
            <exclude>**/*.zip</exclude>
            <exclude>**/*.rar</exclude>
            <exclude>**/*.tar</exclude>
            <exclude>**/*.tar.gz</exclude>
            <exclude>**/*.tar.bz2</exclude>
            <exclude>**/*.gz</exclude>
            <exclude>**/*.xls</exclude>
            <exclude>**/META-INF/services/**</exclude>
            <exclude>**/META-INF/gradle-plugins/**</exclude>
            <exclude>**/*.md</exclude>
            <exclude>**/*.xls</exclude>
            <exclude>**/*.doc</exclude>
            <exclude>**/*.odt</exclude>
            <exclude>**/*.ods</exclude>
            <exclude>**/*.pdf</exclude>
            <exclude>**/.travis.yml</exclude>
            <exclude>**/*.swf</exclude>
            <exclude>**/*.json</exclude>
            <!-- <exclude>**/*.svg</exclude> -->
            <exclude>**/*.eot</exclude>
            <exclude>**/*.ttf</exclude>
            <exclude>**/*.woff</exclude>
            <exclude>**/*.xlsx</exclude>
            <exclude>**/*.docx</exclude>
            <exclude>**/*.ppt</exclude>
            <exclude>**/*.pptx</exclude>
            <exclude>**/*.patch</exclude>
            <!-- end default excludes -->

            <!-- by file extension -->
            <exclude>**/*.log</exclude>
            <exclude>**/*.txt</exclude>
            <exclude>**/*.csv</exclude>
            <exclude>**/*.tsv</exclude>
            <exclude>**/*.parquet</exclude>
            <exclude>**/*.jks</exclude>
            <exclude>**/*.nonformat</exclude>
            <exclude>**/*.gzip</exclude>
            <exclude>**/*.k</exclude>
            <exclude>**/*.q</exclude>
            <exclude>**/*.dat</exclude>
            <exclude>**/*.pem</exclude>

            <!-- by file name -->
            <exclude>**/Jenkinsfile</exclude>
            <exclude>**/LICENSE</exclude>
            <exclude>**/NOTICE</exclude>
            <exclude>**/postinstall</exclude>
            <exclude>**/.babelrc</exclude>
            <exclude>**/.checkstyle</exclude>
            <exclude>**/.eslintcache</exclude>
            <exclude>**/.eslintignore</exclude>
            <exclude>**/.eslintrc</exclude>
            <exclude>**/git.properties</exclude>
            <exclude>**/pom.xml.versionsBackup</exclude>
            <exclude>**/q</exclude>
            <exclude>**/c.java</exclude>
            <exclude>**/swagger-ui/**</exclude>
            <exclude>**/gradlew</exclude>
            <exclude>**/tsconfig.tsbuildinfo</exclude>

            <!-- by directory name -->
            <exclude>**/node_modules/**</exclude>
            <exclude>**/.idea/**</exclude>
            <exclude>**/db/**</exclude>
            <exclude>**/*.ipynb</exclude>
          </excludes>
          <mapping>
            <DataSourceRegister>SCRIPT_STYLE</DataSourceRegister>
            <properties>SCRIPT_STYLE</properties>
            <java>SLASHSTAR_STYLE</java>
            <hql>DOUBLEDASHES_STYLE</hql>
            <jnk>DOUBLESLASH_STYLE</jnk>
            <stg>DOUBLESLASH_STYLE</stg>
            <g>DOUBLESLASH_STYLE</g>
            <proto>SLASHSTAR_STYLE</proto>
            <less>SLASHSTAR_STYLE</less>
            <hpp>SLASHSTAR_STYLE</hpp>
            <cc>SLASHSTAR_STYLE</cc>
            <tdd>SCRIPT_STYLE</tdd>
            <command>SCRIPT_STYLE</command>
            <fmpp>SCRIPT_STYLE</fmpp>
            <q>DOUBLEDASHES_STYLE</q>
            <conf>SCRIPT_STYLE</conf>
            <jj>SLASHSTAR_STYLE</jj>
            <dss>SCRIPT_STYLE</dss>
            <rc>SCRIPT_STYLE</rc>
            <service>SCRIPT_STYLE</service>
            <svg>XML_STYLE</svg>
            <mvnw>SCRIPT_STYLE</mvnw>
            <jsx>SLASHSTAR_STYLE</jsx>
            <tsx>SLASHSTAR_STYLE</tsx>
            <ts>SLASHSTAR_STYLE</ts>
            <jmx>XML_STYLE</jmx>
            <g4>SLASHSTAR_STYLE</g4>
          </mapping>
        </configuration>
        <executions>
          <execution>
            <id>default-cli</id>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
          <execution>
            <id>verify-license-headers</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>de.skuzzle.enforcer</groupId>
            <artifactId>restrict-imports-enforcer-rule</artifactId>
            <version>2.0.0</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>avoid-bad-dependencies</id>
            <phase>verify</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <skip>${skipEnforcer}</skip>
              <rules>
                <bannedDependencies>
                  <excludes>
                    <exclude>commons-logging</exclude>
                    <exclude>javax.servlet:servlet-api</exclude>
                    <exclude>org.mortbay.jetty:servlet-api</exclude>
                    <exclude>org.mortbay.jetty:servlet-api-2.5</exclude>
                    <exclude>log4j:log4j</exclude>
                  </excludes>
                </bannedDependencies>
                <RestrictImports>
                  <reason>Use javax annotations instead of jetbrains</reason>
                  <bannedImport>org.jetbrains.annotations.**</bannedImport>
                </RestrictImports>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>enforce-project-rules</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <banDuplicatePomDependencyVersions />
                <requireJavaVersion>
                  <version>11</version>
                </requireJavaVersion>
                <requireMavenVersion>
                  <version>[3.6.2,)</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.7.0</version>
      </extension>
    </extensions>
  </build>

  <profiles>
    <profile>
      <id>spark-cluster</id>
      <!-- TODO setup an "external" Spark cluster: start a master + N workers - follow up ! -->
      <!-- Either download a Spark runtime tarball and run a process for the master + workers -->
      <!-- or use a (custom??) Docker image + Docker Compose. -->
    </profile>
    <profile>
      <id>spotless</id>
      <activation>
        <property>
          <name>!skipSpotless</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <configuration>
              <formats>
                <format>
                  <includes>
                    <include>.gitignore</include>
                  </includes>
                  <trimTrailingWhitespace/>
                  <endWithNewline/>
                  <indent>
                    <spaces>true</spaces>
                    <spacesPerTab>2</spacesPerTab>
                  </indent>
                </format>
                <format>
                  <includes>
                    <include>src/**/*.xml</include>
                    <include>src/**/*.xsd</include>
                  </includes>
                  <excludes>
                    <exclude>**/.idea/**</exclude>
                    <exclude>codestyle/**</exclude>
                    <exclude>site/**</exclude>
                    <exclude>**/pom.xml</exclude>
                    <exclude>**/.flattened-pom.xml</exclude>
                    <exclude>**/.tox/**</exclude>
                    <exclude>**/target/**</exclude>
                    <exclude>**/build/**</exclude>
                    <exclude>**/node_modules/**</exclude>
                    <exclude>**/venv/**</exclude>
                  </excludes>
                  <eclipseWtp>
                    <type>XML</type>
                    <files>
                      <file>${maven.multiModuleProjectDirectory}/codestyle/org.eclipse.wst.xml.core.prefs</file>
                    </files>
                  </eclipseWtp>
                </format>
              </formats>
              <java>
                <google-java-format>
                  <version>${google-java-format.version}</version>
                </google-java-format>
                <licenseHeader>
                  <file>${maven.multiModuleProjectDirectory}/codestyle/copyright-header-java.txt</file>
                  <delimiter>(package|import) </delimiter>
                </licenseHeader>
              </java>
              <scala>
                <scalafmt/>
                <licenseHeader>
                  <file>${maven.multiModuleProjectDirectory}/codestyle/copyright-header-java.txt</file>
                  <delimiter>(package|import) </delimiter>
                </licenseHeader>
              </scala>
            </configuration>
            <executions>
              <execution>
                <id>spotless-check</id>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>skipOnSkipTests</id>
      <activation>
        <property>
          <name>skipTests</name>
          <value>true</value>
        </property>
      </activation>
      <properties>
        <skipITs>true</skipITs>
      </properties>
    </profile>
    <profile>
      <id>withTrino</id>
      <activation>
        <property>
          <name>trino.version</name>
        </property>
      </activation>
      <modules>
        <module>trino</module>
      </modules>
    </profile>
  </profiles>
</project>

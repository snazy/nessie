/*
 * Copyright (C) 2020 Dremio
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";
package nessie.storage;

option java_package = "org.projectnessie.versioned.storage.common.proto";
option java_outer_classname = "StorageTypes";
option java_generate_equals_and_hash = true;
option java_multiple_files = true;

message CommitProto {
  int64 created = 1;
  int64 seq = 2;
  // First element contains the immediate parent commit ID. Additional entries
  // up to N indirect parents.
  repeated bytes tail = 3;
  repeated bytes secondary_parents = 4;
  repeated HeaderEntry headers = 5;
  string message = 6;
  optional bytes reference_index = 7;
  repeated Stripe reference_index_stripes = 8;
  bytes incremental_index = 9;
  bool incomplete_index = 10;
  CommitTypeProto commit_type = 11;
}

message RefProto {
  string name = 1;
  bytes initial_pointer = 2;
  int64 created_at_micros = 3;
  optional bytes extended_info_obj = 4;
}

message ContentValueProto {
  string content_id = 1;
  int32 payload = 2;
  bytes data = 3;
}

message IndexSegmentsProto {
  repeated Stripe stripes = 1;
}

message Stripes {
  repeated Stripe stripes = 1;
}

message Stripe {
  string first_key = 1;
  string last_key = 2;
  bytes segment = 3;
}

message IndexProto {
  bytes index = 1;
}

message StringProto {
  string content_type = 1;
  CompressionProto compression = 2;
  optional string filename = 3;
  repeated bytes predecessors = 4;
  bytes text = 54;
}

enum CommitTypeProto {
  T_UNKNOWN = 0;
  NORMAL = 1;
  INTERNAL = 2;
}

enum CompressionProto {
  C_UNKNOWN = 0;
  NONE = 1;
  GZIP = 2;
  DEFLATE = 3;
  ZSTD = 4;
  LZ4 = 5;
}

message TagProto {
  optional string message = 2;
  repeated HeaderEntry headers = 3;
  optional bytes signature = 4;
}

message ObjProto {
  // bytes id = 1;
  oneof obj {
    CommitProto commit = 2;
    RefProto ref = 3;
    ContentValueProto content_value = 4;
    IndexSegmentsProto index_segments = 5;
    IndexProto index = 6;
    StringProto string_data = 7;
    TagProto tag = 8;
  }
}

message Headers {
  repeated HeaderEntry headers = 1;
}

message HeaderEntry {
  string name = 1;
  repeated string values = 2;
}

message ReferenceProto {
  string name = 1;
  bytes pointer = 2;
  bool deleted = 3;
  optional int64 created_at_micros = 4;
  optional bytes extended_info_obj = 5;
  repeated ReferencePreviousProto previous_pointers = 6;
}

message ReferencePreviousProto {
  bytes pointer = 1;
  int64 timestamp = 2;;
}

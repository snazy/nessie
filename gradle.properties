# enable the Gradle build cache
org.gradle.caching=true
# enable Gradle parallel builds
org.gradle.parallel=true
# configure only necessary Gradle tasks
org.gradle.configureondemand=true
# enable the configuration cache
org.gradle.unsafe.configuration-cache=true
org.gradle.unsafe.configuration-cache-problems=warn
# bump the Gradle daemon heap size (you can set bigger heap sizes as well)
org.gradle.jvmargs=\
  -Xms2g -Xmx4g -XX:MaxMetaspaceSize=768m \
  -Dfile.encoding=UTF-8 \
  -Duser.language=en -Duser.country=US -Duser.variant= \
  --add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED \
  --add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED \
  --add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED \
  --add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED \
  --add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED \
  --add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED \
  --add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED \
  --add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED \
  --add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED \
  --add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED

# Log4j2 registers an MBean, which has multiple issues when used via a Gradle plugin:
#  * Classes (and class loaders) are held across the lifecycle of a single build,
#    causing memory issues.
#  * Simply leads to an exception logged during the build:
#     javax.management.InstanceAlreadyExistsException: org.apache.logging.log4j2:type=...
# Log4j2 is used via JBoss logging via Smallrye Config via Smallrye OpenAPI generator.
systemProp.log4j2.disableJmx=true

name: Main CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'LICENSE'
      - 'NOTICE'
      - '**.md'
      - '!site/**'
      - '.github/dependabot.yml'
      - '.github/workflows/release*.yml'
      - '.github/workflows/check*.yml'
      - '.idea/**'
      - '.editorconfig'

jobs:
  java:
    name: Java/Maven
    runs-on: ubuntu-latest
    env:
      SPARK_LOCAL_IP: localhost

    steps:
    - uses: actions/checkout@v3
    - name: Setup runner
      uses: ./.github/actions/setup-runner
    - name: Setup Java, Gradle
      uses: ./.github/actions/dev-tool-java
      with:
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}

    - name: Gradle / compile
      uses: gradle/gradle-build-action@v2
      with:
        arguments: spotlessCheck checkstyleMain checkstyleTest jar testClasses testJar

    - name: Gradle / unit test
      uses: gradle/gradle-build-action@v2
      with:
        arguments: test

    - name: Gradle / check incl. integ-test
      uses: gradle/gradle-build-action@v2
      with:
        arguments: check

    - name: Gradle / Gatling simulations
      uses: gradle/gradle-build-action@v2
      with:
        arguments: gatlingRun

    - name: Gradle / assemble + publish local
      uses: gradle/gradle-build-action@v2
      with:
        arguments: |
          assemble
          codeCoverageReport -x test -x intTest
          publishToMavenLocal
          -Puber-jar

    - name: Gradle / build tools integration tests
      uses: gradle/gradle-build-action@v2
      with:
        arguments: buildToolsIntegrationTest

    - name: Gradle / assemble + publish snapshot
      if: ${{ env.MAVEN_USERNAME }}
      env:
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
        ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_ACCESS_ID }}
        ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_TOKEN }}
      uses: gradle/gradle-build-action@v2
      with:
        arguments: |
          publishToSonatype closeAndReleaseSonatypeStagingRepository
          -Prelease -Puber-jar

    - name: Capture Test Reports
      uses: actions/upload-artifact@v3
      if: ${{ failure() }}
      with:
        name: test-results
        path: |
          **/build/reports/*
          **/build/test-results/*

    - name: Capture Results
      uses: ./.github/actions/ci-results

  native:
    name: Java/Maven/Native
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup runner
        uses: ./.github/actions/setup-runner
        with:
          more-memory: 'true'
      - name: Setup Java, Gradle
        uses: ./.github/actions/dev-tool-java

      - name: Gradle / integration test native
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            --no-daemon
            :servers:quarkus-server:quarkusBuild
            :servers:quarkus-server:intTest
            -Pnative
            -Pdocker

      - name: Push Docker images
        env:
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
        if: ${{ env.DOCKER_TOKEN }}
        run: |
          echo '${{ secrets.DOCKER_TOKEN }}' | docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin
          docker images --filter 'reference=projectnessie/nessie' --format '{{.ID}}\t{{.Tag}}' |
          while read IMAGE_ID IMAGE_TAG; do
            docker tag "$IMAGE_ID" "projectnessie/nessie-unstable:${IMAGE_TAG%-snapshot}"
            docker push "projectnessie/nessie-unstable:${IMAGE_TAG%-snapshot}"
          done

      - name: Capture Test Reports
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: test-results-native
          path: |
            **/build/reports/*
            **/build/test-results/*

  jackson-tests:
    name: Jackson Integration Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup runner
        uses: ./.github/actions/setup-runner
      - name: Setup Java, Gradle
        uses: ./.github/actions/dev-tool-java

      # These steps are "too quick" to justify a matrix job
      - name: Jackson compatibility tests / 2.6.4 for Spark 2.4.4
        uses: gradle/gradle-build-action@v2
        with:
          arguments: :clients:client:test -Pjackson-tests=2.6.4
      - name: Jackson compatibility tests / 2.10.0 for Spark 3.0.1
        uses: gradle/gradle-build-action@v2
        with:
          arguments: :clients:client:test -Pjackson-tests=2.10.0
      - name: Jackson compatibility tests / 2.11.4 for Spark 3.0.1
        uses: gradle/gradle-build-action@v2
        with:
          arguments: :clients:client:test -Pjackson-tests=2.11.4
      - name: Jackson compatibility tests / 2.12.5 for Spark 3.0.1
        uses: gradle/gradle-build-action@v2
        with:
          arguments: :clients:client:test -Pjackson-tests=2.12.5

      - name: Capture Test Reports
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: test-results-jackson
          path: |
            **/build/reports/*
            **/build/test-results/*

  python:
    name: Python
    runs-on: ubuntu-latest
    env:
      working-directory: ./python
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']

    steps:
    - uses: actions/checkout@v3
    - name: Setup Python
      uses: ./.github/actions/dev-tool-python
      with:
        python-version: ${{ matrix.python-version }}
    - name: Test with tox
      run: tox
      working-directory: ${{env.working-directory}}
    - uses: codecov/codecov-action@v2
      if: github.repository_owner == 'projectnessie'
      continue-on-error: true
      with:
        verbose: true
        fail_ci_if_error: true
        flags: python

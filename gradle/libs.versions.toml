# Nessie dependencies, without the dependencies needed by build-logic/

[versions]
antlr4 = "4.13.0"
awssdk = "2.20.83"
bouncycastle = "1.70"
checkstyle = "10.12.0"
errorprone = "2.19.1"
errorproneSlf4j = "0.1.18"
gatling = "3.9.5"
googleJavaFormat = "1.17.0"
hadoop = "3.3.5"
iceberg = "1.3.0" # While bumping this version, 'nessieClientVersion' must also be updated.
immutables = "2.9.3"
jacoco = "0.8.10"
jandex = "3.1.2"
jmh = "1.36"
junit = "5.9.3"
maven = "3.9.2"
mavenResolver = "1.9.10"
mockito="4.11.0"
nessieClientVersion = "0.59.0" # Must be in sync with Nessie version in the Iceberg release.
nessieBuildPlugins = "0.2.24"
opentelemetry = "1.27.0"
opentelemetryAlpha = "1.25.0-alpha"
opentracing = "0.33.0"
picocli = "4.7.4"
protobuf = "3.23.2"
quarkus = "3.1.1.Final"
slf4j = "1.7.36"
testcontainers = "1.18.3"
undertow = "2.2.24.Final"

# Docker image tags
keycloakContainerTag = "21.0.2"
postgresContainerTag = "14"

[bundles]
junit-testing = ["assertj-core", "mockito-core", "mockito-junit-jupiter", "junit-jupiter-api", "junit-jupiter-params"]

[libraries]
agroal-pool = { module = "io.agroal:agroal-pool", version = "2.2" }
agrona = { module = "org.agrona:agrona", version = "1.18.2" }
antlr-antlr4 = { module = "org.antlr:antlr4", version.ref = "antlr4" }
antlr-antlr4-runtime = { module = "org.antlr:antlr4-runtime", version.ref = "antlr4" }
assertj-core = { module = "org.assertj:assertj-core", version = "3.24.2" }
avro = { module = "org.apache.avro:avro", version = "1.11.1" }
awaitility = { module = "org.awaitility:awaitility", version = "4.2.0" }
awssdk-bom = { module = "software.amazon.awssdk:bom", version.ref = "awssdk" }
bouncycastle-bcpkix = { module = "org.bouncycastle:bcpkix-jdk15on", version.ref = "bouncycastle" }
bouncycastle-bcprov = { module = "org.bouncycastle:bcprov-jdk15on", version.ref = "bouncycastle" }
cassandra-driver-bom = { module = "com.datastax.oss:java-driver-bom", version = "4.16.0" }
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version = "2.9.3" }
cel-bom = { module = "org.projectnessie.cel:cel-bom", version = "0.3.17" }
checkstyle = { module = "com.puppycrawl.tools:checkstyle", version.ref = "checkstyle" }
delta-core = { module = "io.delta:delta-core_2.12", version = "1.1.0-nessie" }
docker-java-api = { module = "com.github.docker-java:docker-java-api", version = "3.3.1" }
errorprone-annotations = { module = "com.google.errorprone:error_prone_annotations", version.ref = "errorprone" }
errorprone-core = { module = "com.google.errorprone:error_prone_core", version.ref = "errorprone" }
errorprone-slf4j = { module = "jp.skypencil.errorprone.slf4j:errorprone-slf4j", version.ref = "errorproneSlf4j" }
findbugs-jsr305 = { module = "com.google.code.findbugs:jsr305", version = "3.0.2" }
gatling-charts-highcharts = { module = "io.gatling.highcharts:gatling-charts-highcharts", version.ref = "gatling" }
google-java-format = { module = "com.google.googlejavaformat:google-java-format", version.ref = "googleJavaFormat" }
guava = { module = "com.google.guava:guava", version = "32.0.1-jre" }
h2 = { module = "com.h2database:h2", version = "2.1.214" }
hadoop-aws = { module = "org.apache.hadoop:hadoop-aws", version.ref = "hadoop" }
hadoop-client = { module = "org.apache.hadoop:hadoop-client", version.ref = "hadoop" }
hadoop-common = { module = "org.apache.hadoop:hadoop-common", version.ref = "hadoop" }
hibernate-validator-cdi = { module = "org.hibernate:hibernate-validator-cdi", version = "6.2.5.Final" }
iceberg-api = { module = "org.apache.iceberg:iceberg-api", version.ref = "iceberg" }
iceberg-aws = { module = "org.apache.iceberg:iceberg-aws", version.ref = "iceberg" }
iceberg-bundled-guava = { module = "org.apache.iceberg:iceberg-bundled-guava", version.ref = "iceberg" }
iceberg-common = { module = "org.apache.iceberg:iceberg-common", version.ref = "iceberg" }
iceberg-core = { module = "org.apache.iceberg:iceberg-core", version.ref = "iceberg" }
iceberg-hive-metastore = { module = "org.apache.iceberg:iceberg-hive-metastore", version.ref = "iceberg" }
iceberg-nessie = { module = "org.apache.iceberg:iceberg-nessie", version.ref = "iceberg" }
iceberg-parquet = { module = "org.apache.iceberg:iceberg-parquet", version.ref = "iceberg" }
iceberg-spark-extensions31-scala212 = { module = "org.apache.iceberg:iceberg-spark-extensions-3.1_2.12", version.ref = "iceberg" }
iceberg-spark-extensions32-scala212 = { module = "org.apache.iceberg:iceberg-spark-extensions-3.2_2.12", version.ref = "iceberg" }
iceberg-spark-extensions32-scala213 = { module = "org.apache.iceberg:iceberg-spark-extensions-3.2_2.13", version.ref = "iceberg" }
iceberg-spark-extensions33-scala212 = { module = "org.apache.iceberg:iceberg-spark-extensions-3.3_2.12", version.ref = "iceberg" }
iceberg-spark-extensions33-scala213 = { module = "org.apache.iceberg:iceberg-spark-extensions-3.3_2.13", version.ref = "iceberg" }
iceberg-spark-extensions34-scala212 = { module = "org.apache.iceberg:iceberg-spark-extensions-3.4_2.12", version.ref = "iceberg" }
iceberg-spark-extensions34-scala213 = { module = "org.apache.iceberg:iceberg-spark-extensions-3.4_2.13", version.ref = "iceberg" }
iceberg-spark31-scala212 = { module = "org.apache.iceberg:iceberg-spark-3.1_2.12", version.ref = "iceberg" }
iceberg-spark32-scala212 = { module = "org.apache.iceberg:iceberg-spark-3.2_2.12", version.ref = "iceberg" }
iceberg-spark32-scala213 = { module = "org.apache.iceberg:iceberg-spark-3.2_2.13", version.ref = "iceberg" }
iceberg-spark33-scala212 = { module = "org.apache.iceberg:iceberg-spark-3.3_2.12", version.ref = "iceberg" }
iceberg-spark33-scala213 = { module = "org.apache.iceberg:iceberg-spark-3.3_2.13", version.ref = "iceberg" }
iceberg-spark34-scala212 = { module = "org.apache.iceberg:iceberg-spark-3.4_2.12", version.ref = "iceberg" }
iceberg-spark34-scala213 = { module = "org.apache.iceberg:iceberg-spark-3.4_2.13", version.ref = "iceberg" }
immutables-builder = { module = "org.immutables:builder", version.ref = "immutables" }
immutables-value-annotations = { module = "org.immutables:value-annotations", version.ref = "immutables" }
immutables-value-fixture = { module = "org.immutables:value-fixture", version.ref = "immutables" }
immutables-value-processor = { module = "org.immutables:value-processor", version.ref = "immutables" }
jackson-bom = { module = "com.fasterxml.jackson:jackson-bom", version = "2.15.2" }
jacoco-ant = { module = "org.jacoco:org.jacoco.ant", version.ref = "jacoco" }
jacoco-report = { module = "org.jacoco:org.jacoco.report", version.ref = "jacoco" }
jacoco-maven-plugin = { module = "org.jacoco:jacoco-maven-plugin", version.ref = "jacoco" }
jakarta-annotation-api = { module = "jakarta.annotation:jakarta.annotation-api", version = "2.1.1" }
jakarta-enterprise-cdi-api = { module = "jakarta.enterprise:jakarta.enterprise.cdi-api", version = "4.0.1" }
jakarta-inject-api = { module = "jakarta.inject:jakarta.inject-api", version = "2.0.1" }
jakarta-servlet-api = { module = "jakarta.servlet:jakarta.servlet-api", version = "6.0.0" }
jakarta-validation-api = { module = "jakarta.validation:jakarta.validation-api", version = "3.0.2" }
jakarta-ws-rs-api = { module = "jakarta.ws.rs:jakarta.ws.rs-api", version = "3.1.0" }
jandex = { module = "org.jboss:jandex", version.ref = "jandex" }
javax-enterprise-cdi-api = { module = "javax.enterprise:cdi-api", version = "2.0" }
javax-servlet = { module = "javax.servlet:javax.servlet-api", version = "4.0.1" }
javax-validation-api = { module = "javax.validation:validation-api", version = "2.0.1.Final"}
javax-ws-rs = { module = "javax.ws.rs:javax.ws.rs-api", version = "2.1.1" }
javax-ws-rs21 = { module = "org.jboss.spec.javax.ws.rs:jboss-jaxrs-api_2.1_spec", version = "2.0.2.Final" }
jaxb-impl = { module = "com.sun.xml.bind:jaxb-impl", version = "2.3.8" }
jersey-bom = { module = "org.glassfish.jersey:jersey-bom", version = "2.39.1" }
jetbrains-annotations = { module = "org.jetbrains:annotations", version = "24.0.1" }
jmh-core = { module = "org.openjdk.jmh:jmh-core", version.ref = "jmh" }
jmh-generator-annprocess = { module = "org.openjdk.jmh:jmh-generator-annprocess", version.ref = "jmh" }
junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params" }
logback-classic = { module = "ch.qos.logback:logback-classic", version = "1.2.12" }
maven-core = { module = "org.apache.maven:maven-resolver-provider", version.ref = "maven" }
maven-resolver-connector-basic = { module = "org.apache.maven.resolver:maven-resolver-connector-basic", version.ref = "mavenResolver" }
maven-resolver-provider = { module = "org.apache.maven:maven-resolver-provider", version.ref = "maven" }
maven-resolver-transport-file = { module = "org.apache.maven.resolver:maven-resolver-transport-file", version.ref = "mavenResolver" }
maven-resolver-transport-http = { module = "org.apache.maven.resolver:maven-resolver-transport-http", version.ref = "mavenResolver" }
micrometer-core = { module = "io.micrometer:micrometer-core", version = "1.11.0" }
microprofile-openapi = { module = "org.eclipse.microprofile.openapi:microprofile-openapi-api", version = "3.1" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }
mongodb-driver-sync = { module = "org.mongodb:mongodb-driver-sync", version = "4.9.1" }
openapi-generator-cli = { module = "org.openapitools:openapi-generator-cli", version = "6.6.0" }
opentelemetry-bom = { module = "io.opentelemetry:opentelemetry-bom", version.ref = "opentelemetry" }
opentelemetry-bom-alpha = { module = "io.opentelemetry:opentelemetry-bom-alpha", version.ref = "opentelemetryAlpha" }
opentelemetry-instrumentation-bom-alpha = { module = "io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom-alpha", version.ref = "opentelemetryAlpha" }
opentracing-api = { module = "io.opentracing:opentracing-api", version.ref = "opentracing" }
opentracing-mock = { module = "io.opentracing:opentracing-mock", version.ref = "opentracing" }
opentracing-util = { module = "io.opentracing:opentracing-util", version.ref = "opentracing" }
parquet-column = { module = "org.apache.parquet:parquet-column", version = "1.13.1" }
picocli = { module = "info.picocli:picocli-codegen", version.ref = "picocli" }
picocli-codegen = { module = "info.picocli:picocli-codegen", version.ref = "picocli" }
postgresql = { module = "org.postgresql:postgresql", version = "42.6.0" }
protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protobuf" }
quarkus-amazon-services-bom = { module = "io.quarkus.platform:quarkus-amazon-services-bom", version.ref = "quarkus" }
quarkus-bom = { module = "io.quarkus.platform:quarkus-bom", version.ref = "quarkus" }
quarkus-cassandra-bom = { module = "io.quarkus.platform:quarkus-cassandra-bom", version.ref = "quarkus" }
quarkus-logging-sentry = { module = "io.quarkiverse.loggingsentry:quarkus-logging-sentry", version = "2.0.1" }
rest-assured = { module = "io.rest-assured:rest-assured", version = "5.3.0" }
rocksdb-jni = { module = "org.rocksdb:rocksdbjni", version = "8.1.1.1" }
scala-library-v212 = { module = "org.scala-lang:scala-library", version = { strictly = "[2.12, 2.13[", prefer = "2.12.17" }}
scala-library-v213 = { module = "org.scala-lang:scala-library", version = { strictly = "[2.13, 2.14[", prefer = "2.13.10"}}
slf4j-api = {  module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-jcl-over-slf4j = { module = "org.slf4j:jcl-over-slf4j", version.ref = "slf4j" }
slf4j-log4j-over-slf4j = { module = "org.slf4j:log4j-over-slf4j", version.ref = "slf4j" }
spark-sql-v31-v212 = { module = "org.apache.spark:spark-sql_2_12", version = { strictly = "[3.1, 3.2[", prefer = "3.1.3"}}
spark-sql-v32-v212 = { module = "org.apache.spark:spark-sql_2_12", version = { strictly = "[3.2, 3.3[", prefer = "3.2.4"}}
spark-sql-v32-v213 = { module = "org.apache.spark:spark-sql_2_13", version = { strictly = "[3.2, 3.3[", prefer = "3.2.4"}}
spark-sql-v33-v212 = { module = "org.apache.spark:spark-sql_2_12", version = { strictly = "[3.3, 3.4[", prefer = "3.3.2"}}
spark-sql-v33-v213 = { module = "org.apache.spark:spark-sql_2_13", version = { strictly = "[3.3, 3.4[", prefer = "3.3.2"}}
spark-sql-v34-v212 = { module = "org.apache.spark:spark-sql_2_12", version = { strictly = "[3.4, 3.5[", prefer = "3.4.0"}}
spark-sql-v34-v213 = { module = "org.apache.spark:spark-sql_2_13", version = { strictly = "[3.4, 3.5[", prefer = "3.4.0"}}
testcontainers-cassandra = { module = "org.testcontainers:cassandra", version.ref = "testcontainers" }
testcontainers-cockroachdb = { module = "org.testcontainers:cockroachdb", version.ref = "testcontainers" }
testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-keycloak = { module = "com.github.dasniko:testcontainers-keycloak", version = "2.5.0" }
testcontainers-mongodb = { module = "org.testcontainers:mongodb", version.ref = "testcontainers" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
testcontainers-testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
threeten-extra = { module = "org.threeten:threeten-extra", version = "1.7.2" }
undertow-core = { module = "io.undertow:undertow-core", version.ref = "undertow" }
undertow-servlet = { module = "io.undertow:undertow-servlet", version.ref = "undertow" }
weld-se-core = { module = "org.jboss.weld.se:weld-se-core", version = "3.1.9.Final" }
wiremock = { module = "com.github.tomakehurst:wiremock-jre8-standalone", version = "2.35.0" }

[plugins]
annotations-stripper = { id = "org.projectnessie.annotation-stripper", version = "0.1.2" }
errorprone = { id = "net.ltgt.errorprone", version = "3.1.0" }
gatling = { id = "io.gatling.gradle", version = "3.9.5" }
jmh = { id = "me.champeau.jmh", version = "0.7.1" }
nessie-reflectionconfig = { id = "org.projectnessie.buildsupport.reflectionconfig", version.ref = "nessieBuildPlugins" }
nessie-run = { id = "org.projectnessie", version = "0.30.6" }
nexus-publish-plugin = { id = "io.github.gradle-nexus.publish-plugin", version = "1.3.0" }
node-gradle = { id = "com.github.node-gradle.node", version = "5.0.0" }
protobuf = { id = "com.google.protobuf", version = "0.9.3" }
quarkus = { id = "io.quarkus", version.ref = "quarkus" }
smallrye-openapi = { id = "io.smallrye.openapi", version = "3.3.4" }
